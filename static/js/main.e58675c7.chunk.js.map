{"version":3,"sources":["components/FeedbackOptions/FeedbackOption.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","components/Provider/Provider.js","App/App.js","index.js"],"names":["module","exports","PropTypes","Statistics","good","number","isRequired","neutral","bad","total","positivePercentage","ListGroup","variant","Item","FeedbackOptions","onClickFeedbackChange","func","option","object","className","styles","container_btn","Object","keys","map","button","Button","btn","name","onClick","Section","title","string","style","marginTop","Notification","messege","Feedback","stateValues","Provider","useState","goodChange","neutralChange","badChange","procentOfPositiveFeedbacks","Math","round","sum","prevState","App","useContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,IAAM,4BAA4B,cAAgB,wC,0KCapEC,IAAUC,WAAa,CACrBC,KAAMF,IAAUG,OAAOC,WACvBC,QAASL,IAAUG,OAAOC,WAC1BE,IAAKN,IAAUG,OAAOC,WACtBG,MAAOP,IAAUG,OAAOC,WACxBI,mBAAoBR,IAAUG,OAAOC,YAExBH,MAnBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMG,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAEE,eAACC,EAAA,EAAD,CAAWC,QAAQ,QAAnB,UACE,eAACD,EAAA,EAAUE,KAAX,mBAAsBT,KACtB,eAACO,EAAA,EAAUE,KAAX,sBAAyBN,KACzB,eAACI,EAAA,EAAUE,KAAX,kBAAqBL,KACrB,eAACG,EAAA,EAAUE,KAAX,oBAAuBJ,KACvB,eAACE,EAAA,EAAUE,KAAX,gCAAmCH,EAAnC,W,iCCYNR,IAAUY,gBAAkB,CAC1BC,sBAAuBb,IAAUc,KAAKV,WACtCW,OAAQf,IAAUgB,OAAOZ,YAEZQ,MAtBf,YAA6D,IAAlCC,EAAiC,EAAjCA,sBAAuBE,EAAU,EAAVA,OAChD,OACE,qBAAKE,UAAWC,IAAOC,cAAvB,SAEIC,OAAOC,KAAKN,GAAQO,KAAI,SAAAC,GAAM,OAC5B,cAACC,EAAA,EAAD,CACEP,UAAWC,IAAOO,IAClBf,QAAQ,UACRgB,KAAMH,EACNI,QAAS,kBAAMd,EAAsBU,IAJvC,SAKgBA,GAATA,SCLjBvB,IAAU4B,QAAU,CAClBC,MAAO7B,IAAU8B,OAAO1B,YAEXwB,MAXf,YAA6B,IAAVC,EAAS,EAATA,MACjB,OACE,qBAAKE,MAAO,CAAEC,UAAW,QAAzB,SACE,6BAAKH,OCHI,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,+BAAOA,ICII,SAASC,EAAT,GAA2G,IAAtFjC,EAAqF,EAArFA,KAAMG,EAA+E,EAA/EA,QAASC,EAAsE,EAAtEA,IAAKC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,mBAAoBK,EAAsC,EAAtCA,sBAAuBuB,EAAe,EAAfA,YAExG,OACE,gCACE,cAAC,EAAD,CAASP,MAAM,0BACf,cAAC,EAAD,CACEhB,sBAAuBA,EACvBE,OAAQqB,IAEV,cAAC,EAAD,CAASP,MAAM,eACJ,IAAVtB,EAEC,cAAC0B,EAAD,CAAcC,QAAQ,yBAEtB,cAAC,EAAD,CACEhC,KAAMA,EACNG,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,ODpB9BR,IAAUiC,aAAe,CACvBC,QAASlC,IAAU8B,OAAO1B,YC4B5BJ,IAAUmC,SAAW,CACnBjC,KAAMF,IAAUG,OAAOC,WACvBC,QAASL,IAAUG,OAAOC,WAC1BE,IAAKN,IAAUG,OAAOC,WACtBG,MAAOP,IAAUG,OAAOC,WACxBI,mBAAoBR,IAAUG,OAAOC,WACrCS,sBAAuBb,IAAUc,KAAKV,YCjCzB,SAASiC,IAEtB,MAA2BC,mBAAS,GAApC,mBAAOpC,EAAP,KAAaqC,EAAb,KACA,EAAiCD,mBAAS,GAA1C,mBAAOjC,EAAP,KAAgBmC,EAAhB,KACA,EAAyBF,mBAAS,GAAlC,mBAAOhC,EAAP,KAAYmC,EAAZ,KAEMC,EAA6BC,KAAKC,MAAM1C,GAAQA,EAAOG,EAAUC,GAAO,KACxEuC,EAAM3C,EAAOG,EAAUC,EAa7B,OACE,qBAAKW,UAAU,YAAf,SACE,cAACkB,EAAD,CACEC,YAAa,CAAElC,OAAMG,UAASC,OAC9BJ,KAAMA,EACNG,QAASA,EACTC,IAAKA,EACLC,MAAOsC,EACPrC,mBAAoBkC,EAA4B7B,sBAnBxB,SAACa,GAChB,SAATA,EACFa,GAAW,SAAAO,GAAS,OAAIA,EAAY,KAEpB,YAATpB,EACPc,GAAc,SAAAM,GAAS,OAAIA,EAAY,KAEvB,QAATpB,GACPe,GAAU,SAAAK,GAAS,OAAIA,EAAY,UCrBzC,IAiBeC,EAjBH,WAEV,MAAuFC,qBAAWX,GAA1FnC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKuC,EAA5B,EAA4BA,IAAKH,EAAjC,EAAiCA,2BAA4B7B,EAA7D,EAA6DA,sBAC7D,OAEI,cAACsB,EAAD,CACEC,YAAa,CAAElC,OAAMG,UAASC,OAC9BJ,KAAMA,EACNG,QAASA,EACTC,IAAKA,EACLC,MAAOsC,EACPrC,mBAAoBkC,EAA4B7B,sBAAuBA,KCR/EoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,UACE,cAAC,EAAD,QAIJe,SAASC,eAAe,W","file":"static/js/main.e58675c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOption_btn__1ONgu\",\"container_btn\":\"FeedbackOption_container_btn__2aaEi\"};","import PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    \n    <ListGroup variant=\"flush\" >\n      <ListGroup.Item>Good:{good}</ListGroup.Item>\n      <ListGroup.Item>Neutral:{neutral}</ListGroup.Item>\n      <ListGroup.Item>Bad:{bad}</ListGroup.Item>\n      <ListGroup.Item>Total:{total}</ListGroup.Item>\n      <ListGroup.Item>Positive Feedback:{positivePercentage}%</ListGroup.Item>\n    </ListGroup>\n  )\n}\nPropTypes.Statistics = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;","import PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './FeedbackOption.module.css'\nfunction FeedbackOptions({ onClickFeedbackChange, option }) {\n  return (\n    <div className={styles.container_btn}>\n      {\n        Object.keys(option).map(button =>\n          <Button\n            className={styles.btn}\n            variant=\"primary\"\n            name={button}\n            onClick={() => onClickFeedbackChange(button)}\n            key={button}>{button}\n          </Button>\n        )\n      }\n    </div>\n  )\n   \n}\nPropTypes.FeedbackOptions = {\n  onClickFeedbackChange: PropTypes.func.isRequired,\n  option: PropTypes.object.isRequired,\n};\nexport default FeedbackOptions;","import PropTypes from 'prop-types'\nfunction Section({ title }) {\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nPropTypes.Section = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;","import PropTypes from 'prop-types'\nexport default function Notification({ messege }) {\n  return (\n    <span>{messege}</span>\n  );\n};\nPropTypes.Notification = {\n  messege: PropTypes.string.isRequired,\n};","\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Notification from '../Notification';\nimport PropTypes from 'prop-types';\n\nexport default function Feedback ({ good, neutral, bad, total, positivePercentage, onClickFeedbackChange, stateValues }) {\n\n  return (\n    <div >\n      <Section title=\"Please leave feedback\" />\n      <FeedbackOptions\n        onClickFeedbackChange={onClickFeedbackChange}\n        option={stateValues}\n      />\n      <Section title=\"Statistics\" />\n      {total === 0\n        ?\n        <Notification messege=\"There is no feedback\" />\n        :\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />}\n      \n         \n    </div>\n  )\n  \n}\n\nPropTypes.Feedback = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n  onClickFeedbackChange: PropTypes.func.isRequired,\n};","import { useState } from \"react\";\r\nimport Feedback from '../Feedback';\r\n\r\nconst feedback = {\r\n  GOOD: 'good',\r\n  NEUTRAL: 'neutral',\r\n  BAD: 'bad'\r\n}\r\nexport default function Provider() {\r\n  \r\n  const [good, goodChange] = useState(0);\r\n  const [neutral, neutralChange] = useState(0);\r\n  const [bad, badChange] = useState(0);\r\n\r\n  const procentOfPositiveFeedbacks = Math.round(good / (good + neutral + bad) * 100);\r\n  const sum = good + neutral + bad;\r\n  \r\n  const onClickFeedbackChange = (name) => {\r\n    if (name === 'good')\r\n      goodChange(prevState => prevState + 1)\r\n      \r\n    else if (name === 'neutral')\r\n      neutralChange(prevState => prevState + 1)\r\n      \r\n    else if (name === 'bad')\r\n      badChange(prevState => prevState + 1)\r\n   \r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Feedback\r\n        stateValues={{ good, neutral, bad }}\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={sum}\r\n        positivePercentage={procentOfPositiveFeedbacks} onClickFeedbackChange={onClickFeedbackChange}\r\n      />\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react';\nimport './App.css';\nimport Provider from \"../components/Provider/Provider\";\nimport Feedback from \"../components/Feedback\"\nconst App = () => {\n \n  const { good, neutral, bad, sum, procentOfPositiveFeedbacks, onClickFeedbackChange } = useContext(Provider);\n  return (\n    \n      <Feedback\n        stateValues={{ good, neutral, bad }}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={sum}\n        positivePercentage={procentOfPositiveFeedbacks} onClickFeedbackChange={onClickFeedbackChange}\n      />\n    \n  )\n\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport Provider from './components/Provider/Provider';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}